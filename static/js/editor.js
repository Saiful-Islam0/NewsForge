// Summernote integration for article editor
document.addEventListener('DOMContentLoaded', function() {
  // Initialize Summernote if the content editor exists
  if (document.querySelector('#content')) {
    $('#content').summernote({
      height: 500,
      placeholder: 'Write your article content here...',
      tabsize: 2,
      toolbar: [
        ['style', ['style']],
        ['font', ['bold', 'underline', 'clear']],
        ['color', ['color']],
        ['para', ['ul', 'ol', 'paragraph']],
        ['table', ['table']],
        ['insert', ['link', 'picture']],
        ['view', ['fullscreen', 'codeview', 'help']]
      ],
      fontNames: ['Source Sans Pro', 'Merriweather', 'Arial', 'Arial Black', 'Comic Sans MS', 'Courier New'],
      styleTags: [
        { title: 'Heading 1', tag: 'h1' },
        { title: 'Heading 2', tag: 'h2' },
        { title: 'Heading 3', tag: 'h3' },
        { title: 'Paragraph', tag: 'p' },
        { title: 'Blockquote', tag: 'blockquote' }
      ],
      callbacks: {
        onChange: function(contents) {
          // Update the hidden input field with the content
          $('#content').val(contents);
        },
        onImageUpload: function(files) {
          // Alert the user to use the Media Library instead
          alert('Please use the Media Library to upload images, then insert them using URLs.');
        }
      }
    });
  }
  
  // Handle slug generation
  const titleInput = document.querySelector('#title');
  const slugInput = document.querySelector('#slug');
  
  if (titleInput && slugInput) {
    titleInput.addEventListener('blur', function() {
      // Only generate slug if it's empty or hasn't been manually changed
      if (!slugInput.value || slugInput.dataset.autoGenerated === 'true') {
        const title = this.value;
        // Convert to lowercase, replace spaces with hyphens, remove special chars
        let slug = title.toLowerCase()
          .replace(/[^\w\s-]/g, '')  // Remove special characters
          .replace(/\s+/g, '-')      // Replace spaces with hyphens
          .replace(/-+/g, '-')       // Replace multiple hyphens with single hyphen
          .trim();                   // Trim whitespace from ends
        
        slugInput.value = slug;
        slugInput.dataset.autoGenerated = 'true';
      }
    });
    
    // When slug is manually edited, stop auto-generation
    slugInput.addEventListener('input', function() {
      this.dataset.autoGenerated = 'false';
    });
  }
  
  // Handle meta title generation from main title
  const metaTitleInput = document.querySelector('#meta_title');
  
  if (titleInput && metaTitleInput) {
    titleInput.addEventListener('blur', function() {
      // Only auto-fill if meta title is empty
      if (!metaTitleInput.value) {
        metaTitleInput.value = this.value;
      }
    });
  }
  
  // Handle scheduled publishing date/time
  const statusSelect = document.querySelector('#status');
  const publishDateContainer = document.querySelector('#publish-date-container');
  
  if (statusSelect && publishDateContainer) {
    statusSelect.addEventListener('change', function() {
      if (this.value === 'scheduled') {
        publishDateContainer.style.display = 'block';
      } else {
        publishDateContainer.style.display = 'none';
      }
    });
    
    // Initial state
    if (statusSelect.value === 'scheduled') {
      publishDateContainer.style.display = 'block';
    } else {
      publishDateContainer.style.display = 'none';
    }
  }
  
  // Tags input handling (comma-separated)
  const tagsInput = document.querySelector('#tags');
  
  if (tagsInput) {
    tagsInput.addEventListener('keydown', function(e) {
      if (e.key === ',') {
        // Validate the tag (optional)
        const tagValue = this.value.trim();
        if (tagValue) {
          // You could add tag validation here
          // For example, ensure tags are at least 2 characters long
        }
      }
    });
  }
  
  // Featured image preview
  const featuredImageInput = document.querySelector('#featured_image');
  const featuredImageUrlInput = document.querySelector('#featured_image_url');
  const imagePreviewContainer = document.querySelector('#image-preview');
  
  if (featuredImageInput && imagePreviewContainer) {
    featuredImageInput.addEventListener('change', function() {
      if (this.files && this.files[0]) {
        const reader = new FileReader();
        
        reader.onload = function(e) {
          imagePreviewContainer.innerHTML = `
            <div class="preview-image-container">
              <img src="${e.target.result}" alt="Preview" class="preview-image">
              <button type="button" class="remove-image-btn btn btn-sm btn-danger">
                <i class="fas fa-times"></i> Remove
              </button>
            </div>
          `;
          
          // Add event listener to remove button
          document.querySelector('.remove-image-btn').addEventListener('click', function() {
            featuredImageInput.value = '';
            imagePreviewContainer.innerHTML = '';
          });
        };
        
        reader.readAsDataURL(this.files[0]);
      }
    });
  }
  
  // Handle image URL input
  if (featuredImageUrlInput && imagePreviewContainer) {
    featuredImageUrlInput.addEventListener('blur', function() {
      if (this.value) {
        imagePreviewContainer.innerHTML = `
          <div class="preview-image-container">
            <img src="${this.value}" alt="Preview" class="preview-image">
            <button type="button" class="remove-image-btn btn btn-sm btn-danger">
              <i class="fas fa-times"></i> Remove
            </button>
          </div>
        `;
        
        // Add event listener to remove button
        document.querySelector('.remove-image-btn').addEventListener('click', function() {
          featuredImageUrlInput.value = '';
          imagePreviewContainer.innerHTML = '';
        });
      }
    });
  }
  
  // Article version history
  const versionHistoryBtn = document.querySelector('#version-history-btn');
  const versionHistoryModal = document.querySelector('#version-history-modal');
  
  if (versionHistoryBtn && versionHistoryModal) {
    versionHistoryBtn.addEventListener('click', function() {
      // Toggle version history panel
      versionHistoryModal.classList.toggle('show');
    });
    
    // Close modal when clicking outside
    window.addEventListener('click', function(e) {
      if (e.target === versionHistoryModal) {
        versionHistoryModal.classList.remove('show');
      }
    });
  }
});
